# Generated by Django 4.2.23 on 2025-09-11 17:17

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllocationSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=150)),
                ('address', models.CharField(blank=True, max_length=150)),
            ],
            options={
                'db_table': 'allocation_site',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150)),
                ('state', models.CharField(default=1, max_length=1)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=1)),
                ('creation_date', models.DateField()),
            ],
            options={
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, error_messages='The username is required', max_length=30)),
                ('user_rating', models.DecimalField(decimal_places=1, default=0, max_digits=3)),
                ('description', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(default='*', max_length=40)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserInteractions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registry_date', models.DateField()),
                ('activity_entity', models.CharField(db_comment='The table name that the user interacted with')),
                ('activity_id', models.IntegerField(db_comment='The id of the record in the table that the user interacted with')),
                ('allocation_site', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='rubberroom.allocationsite')),
                ('user_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='rubberroom.user')),
            ],
            options={
                'db_table': 'user_interaction',
            },
        ),
        migrations.CreateModel(
            name='UserContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friends_from', models.DateField()),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive')])),
                ('friend_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='friend_id', to='rubberroom.user')),
                ('user_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='user_id', to='rubberroom.user')),
            ],
            options={
                'db_table': 'user_contact',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, default=0, max_digits=3)),
                ('comment', models.CharField(blank=True, max_length=150)),
                ('allocation', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='rubberroom.allocationsite')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='rubberroom.user')),
            ],
            options={
                'db_table': 'rating',
            },
        ),
        migrations.CreateModel(
            name='MediaData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('insert_date', models.DateField()),
                ('state', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive')])),
                ('content', models.BinaryField(null=True)),
                ('url', models.CharField(null=True)),
                ('allocation_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='rubberroom.allocationsite')),
            ],
            options={
                'db_table': 'media_data',
            },
        ),
        migrations.CreateModel(
            name='CategoryPriority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(default=0)),
                ('allocationSite', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='rubberroom.allocationsite')),
                ('category', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='rubberroom.category')),
            ],
            options={
                'db_table': 'category_priority',
            },
        ),
        migrations.CreateModel(
            name='AllocationSiteTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocation_site_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='rubberroom.allocationsite')),
                ('tag_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='rubberroom.tag')),
            ],
            options={
                'db_table': 'allocation_site_tag',
            },
        ),
        migrations.AddField(
            model_name='allocationsite',
            name='owner',
            field=models.ForeignKey(default=None, error_messages={'null': 'Please provide an owner for this allocation'}, on_delete=django.db.models.deletion.PROTECT, to='rubberroom.user'),
        ),
        migrations.CreateModel(
            name='AllocationBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('number_of_persons', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('payment_status', models.CharField(choices=[('D', 'Paid'), ('P', 'Pending'), ('T', 'Partial')])),
                ('allocation_site_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='rubberroom.allocationsite')),
            ],
            options={
                'db_table': 'allocation_booking',
            },
        ),
    ]
